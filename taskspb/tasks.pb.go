// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: taskspb/tasks.proto

package taskspb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type UUID struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_d0a76ce0b6d2e0e6, []int{0}
}
func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (dst *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(dst, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Task struct {
	Id                   *UUID    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MetaData             []byte   `protobuf:"bytes,3,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Redeliver            int64    `protobuf:"varint,5,opt,name=redeliver,proto3" json:"redeliver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_d0a76ce0b6d2e0e6, []int{1}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() *UUID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Task) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *Task) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Task) GetRedeliver() int64 {
	if m != nil {
		return m.Redeliver
	}
	return 0
}

func init() {
	proto.RegisterType((*UUID)(nil), "tasks.UUID")
	proto.RegisterType((*Task)(nil), "tasks.Task")
}

func init() { proto.RegisterFile("taskspb/tasks.proto", fileDescriptor_tasks_d0a76ce0b6d2e0e6) }

var fileDescriptor_tasks_d0a76ce0b6d2e0e6 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x31, 0x4f, 0x80, 0x30,
	0x10, 0x85, 0x53, 0x28, 0x6a, 0x0f, 0xa7, 0xea, 0xd0, 0x04, 0x06, 0xc2, 0xc4, 0x84, 0x89, 0xfe,
	0x03, 0xc2, 0xe2, 0x46, 0x1a, 0x59, 0x5c, 0xcc, 0x61, 0x3b, 0x34, 0xd0, 0x40, 0x68, 0xe5, 0x77,
	0xf8, 0x93, 0x4d, 0x5b, 0xa3, 0xd3, 0xdd, 0xfb, 0x2e, 0xf7, 0xf2, 0x1e, 0x3c, 0x78, 0x74, 0xab,
	0x3b, 0x96, 0xa7, 0x38, 0xfb, 0xe3, 0xdc, 0xfd, 0xce, 0x8b, 0x28, 0xda, 0x1a, 0xe8, 0x3c, 0xbf,
	0x8e, 0xfc, 0x11, 0x8a, 0x0b, 0xb7, 0x2f, 0x2d, 0x48, 0x43, 0x3a, 0x26, 0x93, 0x68, 0xbf, 0x09,
	0xd0, 0x37, 0x74, 0x2b, 0xaf, 0x20, 0x33, 0x2a, 0xde, 0xca, 0xe7, 0xb2, 0x4f, 0x3e, 0xe1, 0x4f,
	0x66, 0x46, 0xf1, 0x1a, 0x98, 0x37, 0x56, 0x3b, 0x8f, 0xf6, 0x10, 0x59, 0x43, 0xba, 0x5c, 0xfe,
	0x03, 0x5e, 0x01, 0xb3, 0xda, 0xe3, 0x87, 0x42, 0x8f, 0x22, 0x6f, 0x48, 0x77, 0x2f, 0xef, 0x02,
	0x18, 0xd1, 0x23, 0xe7, 0x40, 0x23, 0xa7, 0x91, 0xc7, 0x3d, 0xd8, 0x9d, 0x5a, 0xe9, 0xcd, 0x5c,
	0xfa, 0x14, 0x45, 0xb2, 0xfb, 0x03, 0x43, 0x0b, 0xec, 0x73, 0xb7, 0x29, 0xc2, 0x00, 0x21, 0x9c,
	0x9b, 0x42, 0xa1, 0x89, 0xbc, 0xdf, 0xfe, 0xf6, 0x5c, 0x6e, 0x62, 0xc5, 0x97, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x2f, 0x22, 0x9c, 0x2e, 0xf9, 0x00, 0x00, 0x00,
}
